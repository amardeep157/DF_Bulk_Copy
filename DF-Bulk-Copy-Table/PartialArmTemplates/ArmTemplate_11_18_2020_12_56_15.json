{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-Bulk-Copy-Table"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_BulkCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "To copy Dimensions",
				"activities": [
					{
						"name": "Lookup_TableNames",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT '[' + TABLE_SCHEMA + '].[' + TABLE_NAME + ']' As MyTableWithSchema\n, TABLE_SCHEMA As MySchema,\nTABLE_NAME As MyTable\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_NAME LIKE 'Dim%'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable_Dataset",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_CopyTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_TableNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_TableNames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_EachTable",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{item().MySchema}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{item().MyTable}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ParquetDataset",
											"type": "DatasetReference",
											"parameters": {
												"outputFile": {
													"value": "@concat(item().MySchema,'_',item().MyTable)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup_TableNames_Partitions",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT '[' + TABLE_SCHEMA + '].[' + TABLE_NAME + ']' As MyTableWithSchema\n, TABLE_SCHEMA As MySchema,\nTABLE_NAME As MyTable\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_NAME LIKE 'Dim%'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable_Dataset",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_CopyTable_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_TableNames_Partitions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_TableNames_Partitions').output.value ",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_EachTable_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@{item().MySchema}",
													"type": "Expression"
												},
												"TableName": {
													"value": "@{item().MyTable}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "JsonDataset",
											"type": "DatasetReference",
											"parameters": {
												"partitionName": {
													"value": "@formatDateTime(utcnow(),'yyyyMMdd')\n\n",
													"type": "Expression"
												},
												"TableDirectoryName": {
													"value": "@concat(item().MySchema,'_',item().MyTable)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"concurrency": 1,
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JsonDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"partitionName": {
						"type": "string"
					},
					"TableDirectoryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().partitionName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Ingested_Tables/Dimension_Partitioned','/',dataset().TableDirectoryName)",
							"type": "Expression"
						},
						"fileSystem": "adlsgen2-container"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		}
	]
}